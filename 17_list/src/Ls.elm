-- リスト ... 同じ型の複数の要素を保持するデータ構造
list1 = [1, 2, 3]
list2 = ["Hello", "World"]
-- 空のリスト
list3 = []
-- 異なる型のデータを混ぜたリストはコンパイルエラーとなる
-- ["a", 1]

-- リスト同士の連結には++演算子を使う
-- 文字列の連結と演算子が同じなのは文字列が文字のリストと見なせることに由来している
-- しかし, Elmの文字列の内部実装にはJavaScriptの文字列がそのまま使われるため, 実際にリスト相当の処理がされている訳ではない
list4 = ["Hello", ", "] ++ ["world", "!"]

-- ::演算子で新しい要素を左側に追加することができる
-- ::演算子は右側から順に結合される
-- 新しい要素を右側に追加することはできない
list5 = 1 :: [2, 3, 4]
list6 = 1 :: 2 :: 3 :: []

-- 長さの取得
list7 = List.length [1, 2, 3]
-- 逆順に並び替え
list8 = List.reverse [1, 2, 3]
-- それぞれの要素に関数を適用
list9 = List.map (\a -> a + 1) [1, 2, 3]
